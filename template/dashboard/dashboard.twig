{% extends '@a/layout.twig' %}
{% do asset('css', [
    {0: 'https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css','minify': false},
    {0:  '../modules/admin/node_modules/admin-lte/plugins/icheck-bootstrap/icheck-bootstrap.min.css','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/jqvmap/jqvmap.min.css','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/overlayScrollbars/css/OverlayScrollbars.min.css','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/daterangepicker/daterangepicker.css','minify': false},
    {0:  '../modules/admin/node_modules/admin-lte/plugins/summernote/summernote-bs4.min.css','minify': false},
    'modules/admin/node_modules/gridstack/dist/gridstack.min.css'
]) %}
{% do asset('js', [
    {0: '../modules/admin/node_modules/admin-lte/plugins/chart.js/Chart.min.js','minify': true},
    {0: '../modules/admin/node_modules/admin-lte/plugins/sparklines/sparkline.js','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/jqvmap/jquery.vmap.min.js','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/jqvmap/maps/jquery.vmap.usa.js','minify': true},
    {0: '../modules/admin/node_modules/admin-lte/plugins/jquery-knob/jquery.knob.min.js', 'minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/moment/moment.min.js', 'minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/daterangepicker/daterangepicker.js','minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js', 'minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/summernote/summernote-bs4.min.js', 'minify': false},
    {0: '../modules/admin/node_modules/admin-lte/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js', 'minify': false},
    'modules/admin/node_modules/gridstack/dist/es5/gridstack-poly.js',
    'modules/admin/node_modules/gridstack/dist/es5/gridstack-jq.js',
]) %}

{% block content %}

    <style>
        .overflow-y-hidden {
            overflow-y: hidden !important;
        }

        .widget-toolbox {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1;
            display: none;
        }

        #gs.editable .grid-stack-item-content:hover .widget-toolbox {
            display: block;
        }

    </style>
    <script type="text/javascript">
        let grid = GridStack.init({
          cellHeight: 20,
          disableResize: true,
          disableDrag: true
        });


        let allowEditGrid = document.getElementById("allowEditGrid");
        let gsDiv = document.getElementById("gs");

        allowEditGrid.addEventListener('click', function (e) {
            grid.enableMove(this.checked);
            grid.enableResize(this.checked);
            this.checked ? gsDiv.classList.add('editable') : gsDiv.classList.remove('editable')
        });

        grid.on('change', function(e, items) {

            fetch("{{ path('admin/save-widgets') }}", {
                        method: 'POST',
                        mode: 'cors', // no-cors, *cors, same-origin
                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                        headers: {
                            'Content-Type': 'application/json'
                            // 'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        referrerPolicy: 'no-referrer', // no-referrer, *client
                        body: JSON.stringify(
                            {
                                "data": grid.save(false),
                            }
                        )


                    }).then(
                        function (response) {
                            if (response.status !== 200) {
                                response.json().then(function (data) {
                                    console.log(data);
                                });
                                return false;
                            }

                            response.json().then(function (data) {
                                console.log(data);
                            });

                        }
                    )
                        .catch(function (err) {
                            console.log('Fetch Error :-S', err);
                        });
        });

    </script>
    <section class="content">
        <div class="container-fluid">
            <div class="custom-control custom-switch pb-3">
                <input type="checkbox" class="custom-control-input" id="allowEditGrid">
                <label class="custom-control-label" for="allowEditGrid">Редактировать виджеты</label>
            </div>

            <div class="grid-stack" id="gs">
                {% for widget in widgets %}

                    <div class="grid-stack-item"
                         gs-id={{ widget.getId }} {{ (widget.options.gs ?? {"h":5})|map((value, key) => "gs-#{key}=\"#{value}\"")|join(' ')|raw }}>

                        <div class="grid-stack-item-content overflow-y-hidden">

                            {{ ViewWidget(widget.getId) }}
                            <div class="widget-toolbox">
                                <a href="#" class="badge bg-dark p-2"><i class="fa fa-edit"></i></a>
                                <a href="#" class="badge bg-dark p-2"><i class="fa fa-trash"></i></a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div><!-- /.container-fluid -->
    </section>

{% endblock %}
